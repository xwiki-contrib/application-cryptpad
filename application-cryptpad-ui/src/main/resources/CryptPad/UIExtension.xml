<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.4" reference="CryptPad.UIExtension" locale="">
  <web>CryptPad</web>
  <name>UIExtension</name>
  <parent>WebHome</parent>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <content/>
  <object>
    <name>CryptPad.UIExtension</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>e2cd14bf-e597-4a5b-83a6-498c760c00c4</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>
 console.log("cp ready1");

require(['jquery'], function($) {
 $(document).ready(function() {
  console.log("cp ready");
  var baseUrl = "http://localhost:3000"
  var iframeDiv;
  var iframe;
  var evL
  window.CryptPad = CryptPad = {};


  CryptPad.loadIframe = function(withPicker, cb) {
    var display = "none"
    var url = baseUrl + "/xwiki/"
    if (withPicker) {
       url += "?picker=1"
       display = "block"
    }
    var handleMessage = function(msg) {
       console.log(msg);
       window.removeEventListener("message", handleMessage);
       cb();
     };

    if (iframe) {
      cb();
    } else {
     iframeDiv = $('&lt;div&gt;&lt;iframe style="display: ' + display + '; position: absolute; top:80px; margin: 30px; border: 1px; width:90%; height: 500px;" width="100%" id="cryptpadiframe" src="' + url + '"&gt;&lt;/iframe&gt;&lt;/div&gt;');
     $('body').append(iframeDiv.html());
     iframe = $("#cryptpadiframe")[0]
     window.addEventListener("message", handleMessage);
    }
  }

  CryptPad.sendToCryptPad = function(type) {
    var handleMessage = function(msg) {
       window.removeEventListener("message", handleMessage);
       console.log(msg);
       console.log(msg.data.href)
       location.href = baseUrl + "/" + type + msg.data.href;
    }

    if (type=="code") {
     CryptPad.loadIframe(false, function() {
       console.log("getting markdown")
       var contentUrl = XWiki.currentDocument.getURL() + "?xpage=plain&amp;outputSyntax=markdown"
       $.get(contentUrl, function(data) {
           console.log(data);
           window.addEventListener("message", handleMessage);
           iframe.contentWindow.postMessage({ type: "put", padType: "code", title: document.title, content: data}, '*')
       });
     });
   } else if (type=="pad") {
     CryptPad.loadIframe(false, function() {
       console.log("getting html")
       var contentUrl = XWiki.currentDocument.getURL() + "?xpage=plain&amp;outputSyntax=annotatedhtml"
       $.get(contentUrl, function(data) {
           console.log(data);
           window.addEventListener("message", handleMessage);
           iframe.contentWindow.postMessage({ type: "put", padType: "pad", title: document.title, content: data}, '*')
       });
     });
   }
  }

  CryptPad.getFromCryptPad = function(url, title, padType) {
     CryptPad.loadIframe((url==""), function() {
        if (url!="") {
           var handleMessage = function(msg) {
              console.log("got get result")
              window.removeEventListener("message", handleMessage);
              $('body').remove(iframe);
              iframe = null;
              var padContent = msg.data;
              console.log(padContent)
              console.log(padContent.content)
              console.log(padType)
              var saveUrl = '${xwiki.getDocument("CryptPad.Save").getURL("view")}';
              var sourceSyntax = (padType=="pad") ? "annotatedxhtml/1.0" : "markdown/1.2"; 
              $.post({
                url: saveUrl,
                enctype: 'multipart/form-data',
                dataType: "plain",
                data: { page: XWiki.currentDocument.space + "." + XWiki.currentDocument.page,
                        content:  padContent.content, sourceSyntax: sourceSyntax, targetSyntax: "xwiki/2.1",
                        xpage: "plain", "outputSyntax" : "plain"}
              }).always(function(result) {
                  console.log(result);
                  // new XWiki.widgets.Notification('The pad content has been saved in XWiki', 'info');
                  document.location.reload(true);
                });
           };
           window.addEventListener("message", handleMessage);
           iframe.contentWindow.postMessage({ type: "get", padType: padType, url : url, title : title}, '*');
        } else {
            var handleMessage = function(msg) {
              console.log("got selection result")
              console.log(msg.data)
              window.removeEventListener("message", handleMessage);
              CryptPad.getFromCryptPad(msg.data.href, msg.data.name, msg.data.type);
            };
            window.addEventListener("message", handleMessage);
        }
     });
  }

    CryptPad.getFromCryptPadAsMacro = function(url, title, padType) {
     CryptPad.loadIframe((url==""), function() {
        if (url!="") {
              var saveUrl = '${xwiki.getDocument("CryptPad.Save").getURL("view")}';
              var sourceSyntax = "xwiki/2.1";
              var wikiContent = '\n\n{{cryptpad url="' + baseUrl + url + '" /}}\n'
              $.post({
                url: saveUrl,
                enctype: 'multipart/form-data',
                dataType: "plain",
                data: { page: XWiki.currentDocument.space + "." + XWiki.currentDocument.page,
                        content: wikiContent, sourceSyntax: sourceSyntax, targetSyntax: "xwiki/2.1",
                        xpage: "plain", "outputSyntax" : "plain", append: true }
              }).always(function(result) {
                  console.log(result);
                  document.location.reload(true);
                });
        } else {
            var handleMessage = function(msg) {
              console.log("got selection result")
              console.log(msg.data)
              window.removeEventListener("message", handleMessage);
              CryptPad.getFromCryptPadAsMacro(msg.data.href, msg.data.name, msg.data.type);
            };
            window.addEventListener("message", handleMessage);
        }
     });
  }

  $("#cryptpadsendcode").click(function() {
      CryptPad.sendToCryptPad("code");
  });

  $("#cryptpadsendpad").click(function() {
      CryptPad.sendToCryptPad("pad");
  });

  $("#cryptpadget").click(function() {
      CryptPad.getFromCryptPad("");
  });
   
  $("#cryptpadgetmacro").click(function() {
      CryptPad.getFromCryptPadAsMacro("");
  });
 });
});


</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>CryptPad.UIExtension</name>
    <number>0</number>
    <className>XWiki.UIExtensionClass</className>
    <guid>a1bed86a-d53c-401c-893b-9f8c5e30ebd7</guid>
    <class>
      <name>XWiki.UIExtensionClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <async_cached>
        <defaultValue>0</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType/>
        <name>async_cached</name>
        <number>3</number>
        <prettyName>Cached</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </async_cached>
      <async_context>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>1</multiSelect>
        <name>async_context</name>
        <number>4</number>
        <prettyName>Context elements</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <values>doc.reference=Document|icon.theme=Icon theme|locale=Language|rendering.defaultsyntax=Default syntax|rendering.restricted=Restricted|rendering.targetsyntax=Target syntax|request.base=Request base URL|request.parameters=Request parameters|request.url=Request URL|request.wiki=Request wiki|user=User|wiki=Wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </async_context>
      <async_enabled>
        <defaultValue>0</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType/>
        <name>async_enabled</name>
        <number>2</number>
        <prettyName>Asynchronous rendering</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </async_enabled>
      <content>
        <disabled>0</disabled>
        <editor>Text</editor>
        <name>content</name>
        <number>1</number>
        <prettyName>Executed Content</prettyName>
        <rows>25</rows>
        <size>120</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </content>
      <extensionPointId>
        <disabled>0</disabled>
        <name>extensionPointId</name>
        <number>5</number>
        <prettyName>Extension Point ID</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </extensionPointId>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>6</number>
        <prettyName>Extension ID</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parameters>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>parameters</name>
        <number>7</number>
        <prettyName>Extension Parameters</prettyName>
        <rows>10</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </parameters>
      <scope>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>scope</name>
        <number>8</number>
        <prettyName>Extension Scope</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>wiki=Current Wiki|user=Current User|global=Global</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </scope>
    </class>
    <property>
      <async_cached>0</async_cached>
    </property>
    <property>
      <async_context/>
    </property>
    <property>
      <async_enabled>0</async_enabled>
    </property>
    <property>
      <content>{{velocity}}#set($discard = $xwiki.jsx.use("CryptPad.UIExtension")){{html clean="false"}} ## we need clean="false" because we want to display the raw content of #submenuitem()
 #template('menus_macros.vm')
 #submenuitem('javascript:void(0)', 'Send to CryptPad Code', 'cryptpadsendcode', 'cryptpadmenu', '')
 #submenuitem('javascript:void(0)', 'Send to CryptPad Wysiwyg', 'cryptpadsendpad', 'cryptpadmenu', '')
 #submenuitem('javascript:void(0)', 'Get from CryptPad', 'cryptpadget', 'cryptpadmenu', '')
 #submenuitem('javascript:void(0)', 'Get from CryptPad as macro', 'cryptpadgetmacro', 'cryptpadmenu', '')
 ##submenuitem('javascript:void(0)', 'Update from CryptPad', 'cryptpadupdate', 'cryptpadmenu', '')
{{/html}}{{/velocity}}</content>
    </property>
    <property>
      <extensionPointId>org.xwiki.plaftorm.moreoptions</extensionPointId>
    </property>
    <property>
      <name>org.xwiki.contrib.cryptpad.sendtocryptpad</name>
    </property>
    <property>
      <parameters/>
    </property>
    <property>
      <scope>wiki</scope>
    </property>
  </object>
</xwikidoc>
